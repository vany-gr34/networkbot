CHAPTER 5-1Internetworking Technologies Handbook 1-58705-001-35 Chapter Goals 
- Learn the basics of routing protocols. Learn the differences between link-state and distance vector routing protocols. Learn about the metrics used by routing protocols to determine path selection. Learn the basics of how data travels from end stations through intermediate stations and on to the destination end station. Understand the difference between routed protocols and routing protocols. Routing Basics This chapter introduces the underlying concepts widely used in routing protocols. Topics summarized here include routing protocol components and algorithms. In addition, the role of routing protocols is briefly contrasted with the role of routed or network protocols. Subsequent chapters in Part VII, “Routing Protocols,” address specific routing protocols in more detail, while the network protocols that use routing protocols are discussed in Part VI, “Network Protocols.” What Is Routing? Routing is the act of moving informat ion across an internetwork from a source to a destination. Along the way, at least one intermediate node typically is encountered. Routing is often contrasted with bridging, which might seem to accomplish precisely the same thing to the casual observer. The primary difference between the two is that br idging occurs at Layer 2 (the link layer) of the OSI reference model, whereas routing occurs at Layer 3 (the network laye r). This distinction provides routing and bridging with different information to use in the process of moving information from source to destination, so the two functions accomplish their tasks in different ways. The topic of routing has been covered in computer science literature for more than two decades, but routing achieved commercial popularity as late as th e mid-1980s. The primary reason for this time lag is that networks in the 1970s were simple, homogeneous environments. Only relatively recently has large-scale internetworking become popular.
5-2Internetworking Technologies Handbook 1-58705-001-3Routing Basics Routing Components Routing Components Routing involves two basic activities: determining optimal routing paths and transporting information groups (typically called packets) through an internetwork. In the context of the routing process, the latter of these is referred to as packet sw itching. Although packet switching is relatively straightforward, path determination can be very complex. Path Determination Routing protocols use metrics to evaluate what path will be the best for a packet to travel. A metric is a standard of measurement, such as path bandwidth, that is used by routing algorithms to determine the optimal path to a destination. To aid the process of path determination, routing algorithms initialize and maintain routing tables, which contain route information. Route information varies depending on the routing algorithm used. Routing algorithms fill routing tables with a variety of information. Destination/next hop associations tell a router that a particular destination can be reached optimally by sending the packet to a particular router representing the “next hop” on the way to th e final destination. When a router receives an incoming packet, it checks th e destination address and attempts to as sociate this address with a next hop. Figure 5-1 depicts a sample destination/next hop routing table. Figure 5-1 Destination /Next Hop Associations Determine the Data’s Optimal Path Routing tables also can contain other information, su ch as data about the desirability of a path. Routers compare metrics to determine optimal routes, and thes e metrics differ depending on the design of the routing algorithm used. A variety of common metrics will be introduced and described later in this chapter. Routers communicate with one another and maintain their routing tables through the transmission of a variety of messages. The routing update message is on e such message that generally consists of all or a portion of a routing table. By analyzing routing updates from all other routers, a router can build a detailed picture of network topology. A link-state advertisement, another example of a message sent between routers, informs other routers of the state of the sender’s links. Link information also can be used to build a complete picture of network topology to enable routers to determine optimal routes to network destinations.Router 2 Router 1 Packet to router X t1 Routing table Dest.: XSend to: R2 Already updatedRouting table Dest.: XSend to: R1 Not yet updated
5-3Internetworking Technologies Handbook 1-58705-001-3Routing Basics Routing Components Switching Switching algorithms is relatively simple; it is the sa me for most routing protocols. In most cases, a host determines that it must send a packet to another host. Having acquired a router’s address by some means, the source host sends a packet addressed specifically to a router’s physical (Media Access Control [MAC]-laye r) address, this time with the protocol (network layer) address of the destination host. As it examines the packet’s destination protocol address, the router determines that it either knows or does not know how to forward the packet to the next hop. If the router does not know how to forward the packet, it typically drops the packet. If the router knows how to fo rward the packet, however, it changes the destination physical address to that of the next hop and transmits the packet. The next hop may be the ultimate destination host. If not, the next hop is usually another router, which executes the same switching decision process. As the packet moves through the internetwork, its physical address changes, but its protocol address remains constant, as illustrated in Figure 5-2. The preceding discussion descri bes switching between a source a nd a destination end system. The International Organization for Standardization (ISO) has developed a hierarchical terminology that is useful in describing this process. Using this term inology, network devices without the capability to forward packets between subnetworks are called end systems (ESs), whereas network devices with these capabilities are called intermediate systems (ISs). ISs are further divided into those that can communicate within routing domains ( intradomain ISs ) and those that communicate both within and between routing domains ( interdomain ISs ). A routing domain generally is considered a portion of an internetwork under common administrative authority that is regulated by a particular set of administrative guidelines. Routing dom ains are also called autonomous systems. With certain protocols, routing domains can be divided into routing areas, but intradomain routing protocols are still used for switching both within and between areas.
5-4Internetworking Technologies Handbook 1-58705-001-3Routing Basics Routing Algorithms Figure 5-2 Numerous Routers May Come into Play During the Switching Process Routing Algorithms Routing algorithms can be differentiated based on several key characteristics. First, the particular goals of the algorithm designer affect the operation of the resulting routing protocol. Second, various types of routing algorithms exist, and each algorithm has a different impact on network and router resources. Finally, routing algorithms use a variety of metrics that affect calculation of optimal routes. The following sections analyze thes e routing algorithm attributes. Design Goals Routing algorithms often have one or more of the following design goals: Optimality Simplicity and low overhead Robustness and stability Rapid convergence FlexibilityRouter 1 Router 2 Router 3To: Destination host Router 1(Protocol address) (Physical address)PacketSource host PC To: Destination host Router 2(Protocol address) (Physical address)Packet To: Destination host Router 3(Protocol address) (Physical address) Packet To: Destination host Destination host(Protocol address) (Physical address) Destination host PCPacket
5-5Internetworking Technologies Handbook 1-58705-001-3Routing Basics Routing Algorithms Optimality refers to the capability of the routing algorith m to select the best route, which depends on the metrics and metric weightings used to make the cal culation. For example, one routing algorithm may use a number of hops and delays, but it may weigh delay more heavily in th e calculation. Naturally, routing protocols must define their metric calculation algorithms strictly. Routing algorithms also are designed to be as simple as possible. In other words, the routing algorithm must offer its functionality efficiently, with a minimum of software and utilization overhead. Efficiency is particularly important when the software implementing the routing algorithm must run on a computer with limited physical resources. Routing algorithms must be robust, which means that they should perform correctly in the face of unusual or unforeseen ci rcumstances, such as hardware fa ilures, high load conditions, and incorrect implementations. Because routers are located at network junction points, they can cause considerable problems when they fa il. The best routing algorithms are often those that have withstood the test of time and that have proven stable under a variety of network conditions. In addition, routing algorithms must converge rapidly. Convergence is the process of agreement, by all routers, on optimal routes. When a network event causes routes to either go down or become available, routers distribute routing update messages that perm eate networks, stimulating recalculation of optimal routes and eventually causing all routers to agree on these routes. Routing algorithms that converge slowly can cause routing loops or network outages. In the routing loop displayed in Figure 5-3, a packet arrives at Router 1 at time t1. Router 1 already has been updated and thus knows that the optimal route to the destination calls for Router 2 to be the next stop. Router 1 therefore forwards the packet to Router 2, but because this router has not yet been updated, it believes that the optimal next hop is Router 1. Router 2 therefore forwards the packet back to Router 1, and the packet continues to boun ce back and forth between the two ro uters until Router 2 receives its routing update or until the packet has been switched the maximum number of times allowed. Figure 5-3 Slow Convergence and Routing Loops Can Hinder Progress Routing algorithms should also be flexible, which means that they should quickly and accurately adapt to a variety of network circumstances. Assume, for example, that a network segment has gone down. As many routing algorithms become aware of the problem, they will quickly select the next-best path for all routes normally using that segment. Routing algo rithms can be programmed to adapt to changes in network bandwidth, router queue size, a nd network delay, among other variables.To reach network: Send to: 27 57 17 24 52 16 26. ..Node A Node B Node C Node A Node BNode A Node A. ..
5-6Internetworking Technologies Handbook 1-58705-001-3Routing Basics Routing Algorithms Algorithm Types Routing algorithms can be classified by type. Key differentiators include these: Static versus dynamic Single-path versus multipath Flat versus hierarchical Host-intelligent versus router-intelligent Intradomain versus interdomain Link-state versus distance vector Static Versus Dynamic Static routing algorithms are hardly algorithms at all, but are table mappings established by the network administrator before the beginning of routing. These mappings do not change unless the network administrator alters them. Algorithms that use static routes are simple to design and work well in environments where network traffic is relatively predictable and where network design is relatively simple. Because static routing systems cannot react to networ k changes, they generally are considered unsuitable for today’s large, constantly changing networks. Most of the dominant routing algorithms today are dynamic routing algorithms, which adjust to changing network circumstances by analyzing incoming routing update messages. If the message indicates th at a network change has occurred, the routing software recalculates routes and sends out new r outing update messages. These messages permeate the network, stimulating routers to rerun their algorithms and change their routing tables accordingly. Dynamic routing algorithms can be supplemented with static routes where appropriate. A router of last resort (a router to which all unroutable packets ar e sent), for example, can be designated to act as a repository for all unroutable packets, ensuring that all messages are at least handled in some way. Single-Path Versus Multipath Some sophisticated routing protocols support multiple paths to the same destination. Unlike single-path algorithms, these multipath algorithms permit traffi c multiplexing over multiple lines. The advantages of multipath algorithms are obvious: They can provide substantially better throughput and reliability. This is generally called load sharing. Flat Versus Hierarchical Some routing algorithms operate in a flat space, while others use routing hierarchies. In a flat routing system, the routers are peers of all others. In a hierar chical routing system, so me routers form what amounts to a routing backbone. Packets from nonbackbone routers travel to the backbone routers, where they are sent through the backbone until they reach the ge neral area of the destination. At this point, they travel from the last backbone router through one or more nonbackbone routers to the final destination. Routing systems often designate logical groups of nodes, called domains, autonomous systems, or areas. In hierarchical systems, some routers in a domain can communicate with routers in other domains, while others can communicate only with routers within their domain. In very large networks, additional hierarchical levels may exist, with routers at the hi ghest hierarchical level fo rming the routing backbone.
5-7Internetworking Technologies Handbook 1-58705-001-3Routing Basics Routing Algorithms The primary advantage of hierarchical routing is that it mimics the organization of most companies and therefore supports their traffic patterns well. Most network communication occurs within small company groups (domains). Because intradomain routers need to know only about other routers within their domain, their routing algorithms can be simplified, and, depending on the routing algorithm being used, routing update traffic can be reduced accordingly. Host-Intelligent Versus Router-Intelligent Some routing algorithms assume that the source end node will determine the entire route. This is usually referred to as source routing. In source-routing systems, routers me rely act as store-and-forward devices, mindlessly sending the packet to the next stop. Other algorithms assume that hosts know nothing a bout routes. In these algorithms, routers determine the path through the internetwork based on their own calculations. In the first system, the hosts have the routing intelligence. In the latter system, routers have the routing intelligence. Intradomain Versus Interdomain Some routing algorithms work only within domai ns; others work within and between domains. The nature of these two algorithm types is different. It stands to reason, ther efore, that an optimal intradomain-routing algorithm would not necessarily be an optimal interdomain-routing algorithm. Link-State Versus Distance Vector Link-state algorithms (also known as shortest path first algorithms) flood routing information to all nodes in the internetwork. Each router, however, sends only the portion of the routing table that describes the state of its own links. In link-state algorithms, each router builds a picture of the entire network in its routing tables. Distance vector algorithms (also known as Bellman-Ford algorithms) call for each router to send all or some portion of its routing table, but only to its neighbors. In essence, link-state algorithms send small updates everywhere, while distan ce vector algorithms send larger updates only to neighboring routers. Distance vector algorithms know only about their neighbors. Because they converge more quickly, link-state algor ithms are somewhat less prone to routing loops than distance vector algorithms. On th e other hand, link-state algorith ms require more CPU power and memory than distance vector algorithms. Link-state algorithms, therefore, can be more expensive to implement and support. Link-state protocols are genera lly more scalable than distance vector protocols. Routing Metrics Routing tables contain information used by switching software to select the best route. But how, specifically, are routing tables built? What is the sp ecific nature of the information that they contain? How do routing algorithms determine that one route is preferable to others? Routing algorithms have used many different metrics to determine the best route. Sophisticated routing algorithms can base route selection on multiple metric s, combining them in a single (hybrid) metric. All the following metrics have been used: Path length Reliability Delay Bandwidth
5-8Internetworking Technologies Handbook 1-58705-001-3Routing Basics Network Protocols Load Communication cost Path length is the most common routing metric. Some routing protocols allow network administrators to assign arbitrary costs to each network link. In this cas e, path length is the su m of the costs associated with each link traversed. Other routing protocols define hop count, a metric that specifies the number of passes through internetworking products, such as routers, that a packet must take en route from a source to a destination. Reliability, in the context of routing algorithms, refers to the dependability (usually described in terms of the bit-error rate) of each network link. Some ne twork links might go down more often than others. After a network fails, certain network links might be repaired more easily or more quickly than other links. Any reliability factors can be taken into account in the assignment of the reliability ratings, which are arbitrary numeric values usually assigned to network links by network administrators. Routing delay refers to the length of time required to move a packet from source to destination through the internetwork. Delay depends on many factors, including the bandwidth of intermediate network links, the port queues at each rout er along the way, network congestion on all intermediate network links, and the physical distance to be traveled. Because delay is a conglomeration of several important variables, it is a common and useful metric. Bandwidth refers to the available traffic capacity of a link. All other things being equal, a 10-Mbps Ethernet link would be preferable to a 64-kbps leased line. Although bandwidth is a rating of the maximum attainable throughput on a link, routes through links with greater bandwidth do not necessarily provide better routes than routes through slower links. For example, if a faster link is busier, the actual time required to send a packet to the destination could be greater. Load refers to the degree to which a network resource, such as a router, is busy. Load can be calculated in a variety of ways, including CPU utilization a nd packets processed per second. Monitoring these parameters on a continual basis can be resource-intensive itself. Communication cost is another important metric, especially because some companies may not care about performance as much as they care about operating expenditures. Although line delay may be longer, they will send packets over their own lines rather than through the public lines that cost money for usage time. Network Protocols Routed protocols are transported by routing protoc ols across an internetwork. In general, routed protocols in this context also are referred to as network protocols. These network protocols perform a variety of functions required for communication between user applications in source and destination devices, and these functions can differ widely among protocol suites. Network protocols occur at the upper five layers of the OSI reference model: the netw ork layer, the transport layer, the session layer, the presentation layer, and the application layer. Confusion about the terms routed protocol and routing protocol is common. Routed protocols are protocols that are routed over an internetwork. Examples of such protocols are the Internet Protocol (IP), DECnet, AppleTalk, Novell NetWare, OSI, Banyan VINES, and Xerox Network System (XNS). Routing protocols, on the other hand, are protocols that implement routing algorithms. Put simply, routing protocols are used by intermediate systems to build ta bles used in determining path selection of routed protocols. Examples of these protocols include Interior Gateway Routing Protocol (IGRP), Enhanced Interior Gateway Routing Protocol (Enhanced IGRP), Open Shorte st Path First (OSPF), Exterior Gateway Protocol (EGP), Border Gateway Protocol (BGP), Intermediate System-to-Intermediate System (IS-IS), and Routing Information Protocol (RIP). Routed an d routing protocols are discussed in detail later in this book.
5-9Internetworking Technologies Handbook 1-58705-001-3Routing Basics Review Questions Review Questions Q—Describe the process of routing packets. A— Routing is the act of moving information across an internetwork from a source to a destination. Q—What are some routing algorithm types? A—Static, dynamic, flat, hierarchical, host-intelligent, router-intelligent, intradomain, interdomain, link-state, and distance vector. Q—Describe the difference between static and dynamic routing. A—Static routing is configured by the network administrator and is not capable of adjusting to changes in the network without network administrator intervention. Dynamic routing adjusts to changing network circumstances by analyzing incoming r outing update messages without administrator intervention. Q—What are some of the metrics used by routing protocols? A—Path length, reliability, delay, bandwidth, load, and communication cost.
5-10Internetworking Technologies Handbook 1-58705-001-3Routing Basics Review Questions
General Maintenance – FAQ 
1. What is maintenance? 
Maintenance refers to all the activities performed to keep equipment, systems, or 
infrastructure in good working condition, prevent failures, and extend their lifespan. 
2. What are the main types of maintenance? 
• Corrective Maintenance: Fixing things after they break. 
• Preventive Maintenance: Regular, scheduled maintenance to avoid breakdowns. 
• Predictive Maintenance: Using data and analytics to predict and prevent failures. 
• Condition-Based Maintenance (CBM): Performed based on the actual condition of 
the asset. 
• Planned Maintenance: Maintenance activities scheduled in advance. 
• Emergency Maintenance: Immediate repair after unexpected failure. 
3. Why is maintenance important? 
• Prevents costly breakdowns 
• Improves safety 
• Increases asset longevity 
• Maintains productivity and performance 
• Ensures compliance with regulations 
4. What is a maintenance schedule? 
A maintenance schedule is a predefined plan detailing when and how maintenance tasks 
should be carried out (daily, weekly, monthly, annually, etc.) for different systems or 
components. 
5. What is a CMMS? 
A Computerized Maintenance Management System (CMMS) is software used to plan, 
track, and manage maintenance activities, assets, work orders, inventory, and reports. 
6. What are common tools used in maintenance? 
• Diagnostic tools (multimeters, thermal cameras) 
• Hand tools (wrenches, screwdrivers, pliers) 
• Lubrication equipment 
• Testing and calibration tools 
• CMMS or maintenance software 
7. What are maintenance logs and why are they important? 
Maintenance logs record what maintenance was done, when, by whom, and what parts were 
used. They help in tracking asset performance and making data-driven decisions. 
8. What are some common maintenance tasks? 
• Cleaning and lubrication 
• Inspections 
• Replacing worn-out parts 
• Software updates (for IT systems) 
• Safety checks 
9. Who performs maintenance? 
Maintenance can be performed by: 
• In-house maintenance technicians or engineers 
• Third-party contractors 
• Automated systems (in IT or advanced manufacturing) 
10. How is maintenance measured or evaluated? 
• MTBF (Mean Time Between Failures) 
• MTTR (Mean Time to Repair) 
• Availability and uptime percentages 
• Maintenance cost per unit/hour 
• Work order completion rate 
Sure! Here's a Frequently Asked Questions (FAQ) section about Predictive Maintenance 
(PdM) that you can use in your chatbot. It’s written in a clear and informative tone, suitable 
for both technical and non-technical users. 
�
�
 ️ Predictive Maintenance (PdM) – FAQ 
1. What is predictive maintenance? 
Predictive maintenance is a proactive approach that uses data analysis, machine learning, and 
condition-monitoring tools to predict when equipment is likely to fail, so maintenance can be 
performed just in time to avoid breakdowns. 
2. How is predictive maintenance different from preventive maintenance? 
• Preventive Maintenance: Scheduled at regular intervals, regardless of equipment 
condition. 
• Predictive Maintenance: Based on actual equipment data and only done when 
needed, saving time and cost. 
3. What technologies are used in predictive maintenance? 
Common technologies include: 
• Sensors (vibration, temperature, humidity, etc.) 
• Internet of Things (IoT) 
• Machine Learning/AI algorithms 
• Cloud computing and Edge devices 
• Digital Twins 
• SCADA systems 
4. What kind of data is needed for predictive maintenance? 
• Historical failure data 
• Real-time sensor data 
• Operational logs 
• Maintenance records 
• Usage patterns 
5. What industries benefit from predictive maintenance? 
• Manufacturing 
• Energy and Utilities 
• Transportation and Logistics 
• Oil and Gas 
• Telecommunications 
• IT & Network Infrastructure 
6. What are the benefits of predictive maintenance? 
• Reduced unplanned downtime 
• Lower maintenance costs 
• Increased equipment lifespan 
• Better safety 
• Improved resource planning 
7. What are common challenges in implementing PdM? 
• High initial investment 
• Data collection complexity 
• Integration with existing systems 
• Need for skilled personnel in data science and analytics 
8. How does AI help in predictive maintenance? 
AI models analyze large volumes of sensor and operational data to detect anomalies, predict 
failures, and recommend maintenance actions with high accuracy. 
9. Can predictive maintenance be used in IT and network systems? 
Yes! In IT and network systems, PdM can monitor performance metrics, detect early signs of 
failures (like overheating routers or failing hard drives), and optimize system uptime. 
10. What tools or platforms are commonly used for predictive maintenance? 
• IBM Maximo 
• Azure IoT 
• AWS Predict 