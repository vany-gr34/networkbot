10GbE Network Configuration Guide for SM200 C and SM435C Operation. 
The purpose of this document is to - Outline hardware requirements for 10GbE networks interfacing the Signal Hound SM200C and SM435C networked devices. - Provide recommendations for 10GbE networking components. - Provide a brief overview of 10GbE networking for customers new to the interface. 10GbE Networking Overview Signal Hound 10GbE devices operate over a single 10GbE link. Command s and data are sent using a proprietary format over UDP at rates up to 6.4Gb/s. 10GbE is full duplex and can operate over a number of physical channels. The two most common are copper and fiber cables. In addition to cabling there are a number of interfaces and connector types used in 10GbE networking, the most common is the SFP+ module. This connector form factor is what the reciever uses and what we recommend customers use for their networks. Figure 1: SFP+ 10GBASE -SR (fiber optic) module Standard 10GbE network copper cables are terminated with two SFP+ connectors and can be seen in the picture below. Copper cables are ideal for local applications where cable distances don’t need to exceed more than a few meters. Copper cables are less complex than fiber alternatives but will have data reliability issues at longer lengths. 
 10GbE copper cable. Terminated with two non detachable SFP+ modules. Fiber cables are constructed from a length of fiber cabling and two detachable SFP+ transceiver modules. The type of fiber cabling and paired SFP+ module must be compatible for the assem bled cable to work. The type of fiber cable used will depend on the SFP+ transceiver module. There are a number of SFP+ fiber transceiver standards, some of the most common and the ones recommended by Signal Hound are the 10GBASE -SR, LR, ER, and ZR. Each s tandard uses a different light wavelength, fiber cable type, and has a different reach (maximum cable length). Standard Name Wavelength Cable Type Reach in km 10GBASE -SR 850nm OM3/4 multi -mode * 0.3/0.4 10GBASE -LR 1310nm OS2 single -mode 10 10GBASE -ER 1550nm OS2 single -mode 40 10GBASE -ZR 1550nm OS2 single -mode 80 Figure 3: *While compatible with several other fiber types, we recommend OM3/4. 
The two types of optical fiber used for 10GbE networks are single -mode and multi -mode. Single mode is commonly used for long distance communications while multi -mode is used for distances less than 0.3km. Single -mode cables are typically yellow while multi -mode ca bles are orange/aqua. Long runs of single mode fibe r can have increase data reliability issues causing increased disconnection issues with your Signal Hound device. If you experience this, we recommend moving to a higher range module. Figure 4: Multi -mode fiber cable with two SFP + SR modules, one attached and one not. The networked SM device has a n SFP+ interface on the front panel. A cable will be connected from the device to a PC. The two most common ways to connect a 10GbE SFP+ cable to a PC is through a PCIE 10GbE network interface card (NIC) or a Thunderbolt 3 to SFP+ adapter. We provide recommendations for both in this document. 
Left to right, Thunderbolt 3 to SFP+ adapter and 2xSFP+ 10GbE NIC adapter card. The SM200C /SM435C is a network device and has a network address that includes a media access control (MAC) addres s, (internet protocol) IP address, and Port address. The MAC address uniquely identifies a network device. No two network devices will have the same MAC address. Customers cannot change the MAC address and should never need to know the devices MAC address, although it is used by your computer in the address resolution protocol (ARP) table which correlates MAC address with IP addresses. The IP address is a label assigned to each device on a given network. Each Signal Hound device is configured with a default IP address of 192.168.2.10. This address can be chan ged using the API or with the network configuration utility in Spike. When interfacing a networked device, the IP address of the device must be specified to establish communication. The port address is another important number used in networking. The defa ult port number is 51665. Its purpose is to ensure the data is delieved to the right application on the two network devices (in this case, your PC and the Signal Hound device ). 
10GbE Network Compatibility Guide 8 The SM200C /SM435C uses UDP to transmit information over the network. One of th e main factors in determining network speed is the maximum transmission unit (MTU) size. MTU refers to the large st packet that can be sent of the network. MTU often defaults to 1500 bytes, and must be set to 9000 bytes (also referred to as jumbo packets) for correct SM200C operation. This document outlines how to do this. There are operating system specific settings that must also be configured and they are detailed in the OS setup sections below. The Signal Hound networked devices run a bare bones 10GbE interface that only responds to ARP requests and proprietary commands. The devices do not support ping requests or any other device discovery methods. Signal Hound networked devices do not support TCP. 2 10GbE Network Compatibility Guide This section outlines the hardware requirements for networking the recievers and includes several recommendations for each of the hardware components. Adapters and Cables Signal Hound recommends fiber cables with SFP+ fiber adapters. The SM200C /SM435C will work with single and multi -mode fiber cables with appropriate transceiver modules. The devices has also been tested with passive copper cables up to 2 meters. Longer passive cables may have increased data reliability issues. Tested Transceivers and Cable s 
- FS SFP -10GSR -85 
- FS SFP -10GLR -31 
- FS SFP -10GZR -55 
- FS-OM3 50/125 multi -mode fiber patch cables 
- FS 9/125 single mode fiber path cable 
- 10GTek CAB -10GSFP -P2M (passive copper cable 2 -meters ) 
- Ubiquiti UniFi direct attach copper cable, 0.5m, (UC -DAC -SFP+) Recomm ended 10GbE Network Interface Cards 
- Intel X722 -DA2/4 adapter cards 
- Intel X520*DA2 adapter cards o One example of such a card, 10Gtek 2 port SFP+ to PCIE ▪ https://www.amazon.com/10Gtek -E10G41BTDAG1P5 -Ethernet -Converged - X520 -DA1/dp/B01DCZCA3O?th=1 
- Intel X710 
10GbE Network Compatibility Guide 9 o Will need t o use SFP+ modules that are programmed for Intel. These can be from Intel directly, or modules purchased from other companies like FS marked for Intel compatibility. - Asus 10Gbps PCIE Adapter (XG -C100F) o Signal Hound has not tested this adapter. Customers ha ve reported success in using them. o https://www.amazon.com/gp/product/B07VLC7LT3/ref=ppx_od_dt_b_asin_title_s00?ie=U TF8&psc=1 Recommended Thunderbolt To 10GbE Adapters 
- QNAP Thunderbolt 3 to 10GbE Adapter (QNA Series) (Recommended) 
- Sonnet Solo10G SFP+ (Thunderbolt 3 Edition) Alternative Connection Methods It is possible to adapt an M.2 key to a PCI -E X4 interface, follow ed by a standard PCI -E network interface card (listed above). Conversion from M.2 to PCI -E can be performed with a part such as https://www.amazon.com/ gp/product/B074Z5YKXJ/ref=ppx_od_dt_b_asin_title_s00?ie=UTF8& psc=1 PCI-E can be extended with a part like https://www .amazon.com/gp/product/B07QRP65M1/ref=ppx_od_dt_b_asin_title_s00?ie=UTF8& psc=1 Operating Systems Signal Hound recommends the following operating systems. 
- Windows 10 /11 
- Linux o Ubuntu 18.04 o Ubuntu 20.04 o CentOS 7 o Red Hat 7 Processor Requirements All measurement capabilities other than the 200MS/s I/Q streaming have modest processor requirements. Typical i5/i7 processors will have the necessary performance. For 200MS/s I/Q streaming, single threaded CPU performance is critica l. Signal Hound recommends CPUs that can sustain 4GHz single threaded performance and 8th generation or newer Intel processors. 
Changing the Device Network Settings 10 The use of Thunderbolt 3 to SFP+ adapters has shown to reduce processor requirements and, in many cases, standard laptop process ors can be sufficient. Recommended PCs This section recommends specific PCs and processors that Signal Hound and its customer have had success with, as well as some that have been reported to have issues. 2.7.1 PCs with Reported Success 
- Dell XPS 15 9570 (laptop) using both SFP+ to TB3 adapters (Win). 
- Dell XPS 8930 (desktop) with Intel i7 -8700 and X722 -2 NIC (Win). 
- Dell Precision 7570 (DEP -7550 -X99KC) 
- Dell 7540 and 7740. (Linux) 
- Intel NUC NUC6iKYK using SFP+ to TB3 adapters (Win/Linux). 
- Desktop with i7 -6700 CPU an d Intel X520 -2 NIC (Win). 
- Desktop with i7 -4700 CPU and Intel X722 NIC (Linux). 
- Intel NUC NUC7i7DNHE with m.2 to PCIEx4 to NIC adapter (Win). 
- GIGABYTE AERO 15 YB laptop with Intel i9 -10980HK using both QNAP and SONNET SFP+ adapters (Win). 2.7.2 PCs With Reported Issues 
- GIGABYTE Aero 15 YC laptop with Intel i9 -10980HK (Please note the YC model here vs the YB model above) o This laptop was able to be used once following most of the steps in the troubleshooting section. 
- HP Omen laptops (Win) o Customers have reported issues with these laptops using the SFP+ to TB3 adapters. 
- Intel Core i7 -6820HQ processor in laptop form factor (Win). 
- Intel Core i7 -7820HQ processor in laptop form factor (Win). 
- Intel Core i7 -5820K processor in desktop form factor (Win). o This CPU worked for all measurements except full 200MS/s I/Q streaming. 3 Changing the Device Network Settings For setting up the network interface on your PC, see the Window/Linux Setup sections below. To change the network settings (IP/port) of the SM device there are 2 primary approaches, 1) Use the SM Network Configuration utility in Spike.With this utility you can configure the device over the USB 2.0 cable or using a broadcast UDP packet. We recommend using the USB port as it also provides readbac k ability. To use the UDP method, your PC network must be properly configured in advance (see sections below). The Spike user manual covers the SM network configuration utility. 
Windows Setup 11 2 Use the API. The API provides methods for configuring the device network settings over USB and UDP. We again recommend using the USB method when possible. The network settings can be changed using volatile registers if you want the device to default on power cycle. Use the non-volatile methods to ensure the new settings persist between power cycles. 4 Windows Setup This section guides you in setting up your Windows machine for 10GbE operation. These instructions assumes you have already installed a 10GbE NIC or are using a thunderbolt to SFP+ adapter. If using an adapter, you have already installed the proper drivers and enabled the thunderbolt device. The S ignal Hound device should be powered up and connected to the network interface via provided fiber cable and SFP+ connectors. This section will step you through the three main steps in configuring the 10GbE network interface. 
- Specifying a fixed IP for the network interface. 
- Increasing the MTU size, (enable jumbo packets) 
- Verifying remaining network parameters. The default IP address f or the device is 192.168.2. 10 and uses port 51665. Th ese instructions assume you have not modified the default network configuration of the device. Windows Setup 12 Configuration Steps First, you must navigate to the network settings. Start by going to the system settings and select “Network and Internet”. 
Windows Setup 13 Once in the Network and Internet settings, select “Change adapter options” You should now see the “Network Connections” dialog. You should see your 10GbE network interfaces listed here. When a device is connected powered on and connected, one of the 10GbE interfaces will report “Unidentified network”. Right click that interface and select properties to configure the interface. 
Windows Setup 14 First, we must configure the network adapter settings. In the network interface properties press the “Configure” button. This will bring up the 10GbE adapter settings. 
Windows Setup 15 In the adapter properties dialo g, select the “Advanced” tab and configure the adapter with the following settings. If any are missing, move on. When finished press OK. Flow Control – Rx & Tx Enabled Interrupt Moderation – Enabled Interrupt Moderation Rate – Adaptive Jumbo Packet – 9014 Bytes Receive Buffers – 4096 Transmit Buffers – 4096 Any checksum offloads – Enabled And Large Send/Receive offloads – Enabled Speed & Duplex – 10Gbps Full Duplex 
Windows Se tup 16 The next step is to setup the TCP/IPv4 IP address and subnet mask. Re -enter the interface properties menu and select the Internet Protocol Version 4 (IPv4) line and press properties to bring up the IPv4 properties dialog. In this dialog, select “Use the following IP address” and manually fill out the highlighted lines with the corresponding va lues. Select OK when done. At this point the interface should be properly configured and the device can be connected in Spike. Use the File ->Manage Ethernet Devices menu in Spike, add a new device using the default network parameters, and connect to the d evice using the File ->Connect menu. ARP As a troubleshooting step, the arp command can be used to verify the network and device are partially configured. In an administrative command prompt, ping the device with the command ping 192.168.2.10 Assuming the default IP address on th e device. The device will not respond to the ping request, but the PC will also update the ARP table in response to the ping. Once the ping command completes ( it will end in request timed out), the ARP table can be view ed with 
Windows Setup 17 arp -a The arp table under interface 192.168.2.2 should list the SM200C /SM435C device. This verifies partial configuration. The device may still not connect properly if other settings such as jumbo packets/etc are not configured properly. Trouble shooting If you are having difficulties connecting to the Signal Hound device in Windows, or are having issues with continuous uninter rupted operation, here are some additional troubleshooting steps. - Verify the device is connected to the correct network interface, the devices power cable is plugged in and the LED on the device is solid green. The LED should be solid green ~12 seconds after power is applied if a valid network connection is detected. - In the Network Conne ctions dialog, you should see “Unidentified Network” listed next to the network interface that the device is connected to. - Double check that the network interface that the device is connected to has been configured properly and no settings were missed or r everted from prior configuration. - Ensure the high performance power plan is enabled. (See picture below) 
Windows Setup 18 - Disable any anti -virus software temporarily. Anti -virus software has been known to scan network traffic increasing CPU substantially which might lim it network throughput or introduce network data loss. - Verify proper power management settings for the adapter/NIC. This is more important for adapters on laptops. Find your adapter/NIC in the device manager, and right -click and view properties for that device. Under the power management tab, verify the PC is not allowed to turn off the device to save power (unchecked). If check, the PC might disable this device during operation which will cause data loss and the device to disconnect. (See picture below) - If your device is having difficulty connecting, try ena bling only the necessary network subsystems in the Ethernet properties menu. (See picture below) Uncheck all items except QoS packet scheduler and Internet Protocol Version 4 (IPv4). Once unchecked press OK and attempt to connect the device again. If not s uccessful, try checking Internet Protocol Version 6 (IPv6) and trying again. Some customers have reported IPv6 needing to be check before connection occurs. 
Windows Setup 19 - For unstable connections, low throughput, or latency spikes, try increas ing the IRPStackSize. Thi s registry setting increases the number of stack locations available for the Input/Output Request Packet (IRP) stack. Increasing this number might lead to improved network performance and throughput. Using the registry editor, locate the registry subkey HKEY_LOCAL_MACHINE \SYSTEM \CurrentControlSet \Services \LanmanServer \Par ameters If the IRPStackSize entry is not present, create a DWORD value with the name IRPStackSize. If it is present, simply modify it. The default stack size is 15 (decimal), and the maximu m is 50. Microsoft recommends no using values between 33 and 38. Consider trying values such as 20, 30, 32, 45, and 50. Once modified, the system must be restarted to take effect. See picture below. 
Windows Setup 20 - For unstable connections, low throughput, or latency sp ikes, decrease the reservable bandwidth. By default, Windows can reserve up to 80% of the available network bandwidth. To modify this, open the group policy editor and navigate to Computer Configuration -> Administrative Templates -> Network -> QoS Packet Scheduler. Find the “Limit reservable bandwidth” setting and double click it. Select enabled and enter a smaller value or simply 0. Press apply. If left as not configured or disabled, the default value of 80 is used. See picture of configuration below. 
Windows Setup 21 - For unstable connections, low throughput, or latency spikes, disable the network throttling index. Windows implements a throttling mechanism to restrict processing of non - multimedia traffic. This can be disabled in the registry. Use the registry setting at HKEY_LOCAL_MACHINE \SOFTWARE \Microsoft \Windows NT\CurrentVersion \Multimedia \SystemProfile \NetworkThrottlingIndex and set the value to 0xFFFFFFFF to disable. See picture below of this configuration. 
Linux Setup 22 - Disable hyperthreading. If you find that during operation (such as I/Q streaming) one of the CPU cores is at or near 100%, this could be the source of data loss. Network traffic is handled on a single thread in the kernel. If that thead is saturated, and u nable to handle the transfer rates of the SM200C, data loss can occur leading to device disconnection events. Disabling hyper threading could increase the single threaded performance of the PC alleviating this issue. You can disable hyperthreading in the B IOS of some PCs. If this has no effect, Signal Hound recommends re-enabling hyperthreading as it can impact the performance other other heavily threaded applications. 5 Linux Setup This section guides you in setting up an Ubuntu 18.04, Ubuntu 20.04, CentOS 7, or Red Hat 7 machine for SM200C /SM435C operation. These instructions assumes you have already installed a 10GbE NIC or are using a thunderbolt to SFP+ adapter. If using an adapter, you have already installed the proper drivers and enabled the thunderbolt device. In testing, Ubuntu 18.04 and Ubuntu 20.04 did not require driver installations, but required operating system updates and restarts before detecting the 10 GbE NIC. Red Hat 7.9 did not require any driver installation, and de tected the NIC out of the box. The device should be powered up and connected to the network interface via provided fiber cable and SFP+ connectors. 
Linux Setup 23 This section will step you through 
- Specifying a fixed IP for the network interface. 
- Increasing the MTU size (enable jumbo packets) 
- Setting socket /network buffer sizes and ring parameters. The default IP address for the device is 192.168.2.10 and uses port 51665. Th ese instruction s assume you have not modified the default network configuration of the device. The steps outlined in the Configuration Steps section will allows you to permanently set the network configuration, meaning the configuration is not lost after a network interface restart. For a more temporary approach, see the network configuration commands. Configuration Steps 5.1.1 Static IP and MTU Size These instructions are for systems running the GNOME desktop. With the device connected to a valid 10GbE network interface, navigate to the Network Settings. 
Linux Setup 24 Find the 10GbE network interface in the list, and cr eate a new profile using the ‘+’ button located to the right of the interface name. Please note the interface name (enp3s0f0 in the picture above) as it will be used in the commands documented here. In the new profile, under the IPv4 tab, set a manual IPv4 address of 192.168.2.2 and netmask of 255.255.255.0. 
Linux Setup 25 Set the MTU size to 9000 bytes in the Identity tab. Also set a profile name here (if desired). 
Linux Setup 26 Hit apply when finished, and verify the new profile is selected. The profile will have a checkmark next to its name when selected. 5.1.2 Ring Parameters, Flow Control, and Transmit Queue Length The rx/tx ring parameters must also be updated. Signal Hound recommends setting the rx/tx ring entries to 4096. Flow control and transmit queue length can op tionally be set. 5.1.2.1 Ubuntu 18 .04 (ifupdown ) Modify the /etc/network/interfaces file by appending the following lines: pre-up /sbin/ethtool -G iface-name rx 4096 tx 4096 pre-up /sbin/ethtool -A iface-name rx on tx on txqueuelen can be set with ip or ifconfig. Linux Setup 27 Using ip: up /sbin/ip link set dev enp3s0f0 txqueuelen 10000 Using ifconfig: up /sbin/ifconfig iface-name txqueuelen 10000 This modification will run the proper ethtool command to modify the ring parameters the next time the network interface is restarted. It will also turn on flow control and set the txqueuelen. 5.1.2.2 Ubuntu 20.04 ( systemd ) Create a file called /etc/systemd/network/10 -sm200c .link (“ sm200c ” is arbitrary and can be changed to whatever you prefer). Edit the file as follows, using the MAC address of your interface (which could be found with the command “ip a” or similar): [Match] MACAddress= XX:XX:XX:XX:XX:XX [Link] MTUBytes=9000 RxBufferSize=4096 TxBufferSize=40 96 RxFlowControl =On TxFlowControl=On TransmitQueueLength=10000 This will set the ring parameters. It also contains entries to set flow control, MTU size (which is also set in the GUI), and the txqueuelen. However, these entries did not have an effect during Ubuntu 20.04 testing. They have been left here for documentation purposes. 5.1.3 Socket Buffer Sizes Next is to configure the read and write socket buffer sizes. The Signal Hound device can keep up to 32MB of UDP traffic in flight at any given time. We will configure the maximum buffer sizes t o 50MB. To do this, edit the /etc/sysctl.conf file and add the following lines at the end of the file, net.core.rmem_default=10000000 net.core.rmem_max=50000000 
Linux Setup 28 net.core. wmem_default=10000000 net.core. wmem_max=50000000 net.core.netdev_max_backlog=100000 These settings will take effect the next time the network interface/PC is restarted. Restart the computer for all settings to take effect. Use the commands in the next section to verify the settings have been applied properly upon restart. The device should now be able to be interfaced. Network Configuration commands The following commands can be used from the terminal to configure the network interface. The changes that occur for all of the following commands is temporary and will not persist through a netw ork interface restart. See the main configuration steps for permanent methods. Also included are commands that can be used to verify the network settings are configured properly. These commands can be used in a configuration script that is r un on program startup or run manually as needed. For all commands, replace iface -name with the name of the network interface the device is connected to. 5.2.1 MTU Size Set the MTU size. $ sudo ip link set iface-name mtu 9000 View the current MTU sizes. $ ip link show | grep “mtu” 5.2.2 Socket Buffer Sizes Set the socket buffer sizes. $ sudo sysctl -w net.core.rmem_default=10000000 $ sudo sysctl -w net.core.rmem_max=50000000 $ sudo sysctl -w net.core.wmem_default=10000000 $ sudo sysctl -w net.core.wmem_max=50000000 $ sudo sysctl -w net.core.netdev_max_backlog=100000 Read the socket buffer sizes. $ cat /proc/sys/net/core/rmem_default 
Linux Setup 29 $ cat /proc/sys/net/core/rmem_max $ cat /proc/sys/net/core/wmem_default $ cat /proc/sys/net/core/wmem_max $ cat /proc/sys/net/core/netdev_max_backlog 5.2.3 Ring Parameters Set rx/tx ring parameters for a network interface. $ sudo ethtool -G iface-name rx 4096 tx 4096 Read rx/tx ring parameters for network interface. $ ethtool -g iface-name 5.2.4 Flow Control Set the flow contro l variables. $ sudo ethtool -A iface-name rx on tx on Read the current flow control variables. $ ethtool -a iface-name 5.2.5 Trasmit Queue Length 5.2.5.1 ip Set txqueuelen. $ sudo ip link set dev iface-name txqueuelen 10000 Read the txqueuelen. $ ip link show iface-name 5.2.5.2 ifconfig Set txqueuelen. $ sudo ifconfig iface-name txqueuelen 10000 Read the txqueuelen. $ ifconfig iface-name 
Linux Setup 30 Troubleshooting If you are having difficulties connecting to the device on Linux, quickly verify proper setup with the following steps. - Verify the device is connected to the correct network interface, the device power cable is plugged in and the LED on the device is solid green. The LED should be solid green ~12 seconds after power is applied if a valid network connection is detected. - Verify the corre ct profile is selected in the Network Settings for the given network interface. - Use the commands in the Network Configuration commands section to view and verify all network parameters have been properly set. - Use the following commands to determine if any network errors or overruns have occurred. $ netstat -su $ netstat -i $ ip -s link - Disable hyperthreading. If you find that during operation (such as I/Q streaming) one of the CPU cores is at or near 100%, this could be the source of data loss. Network traffic is handled on a single thread in the kernel. If that thead is saturated, and u nable to handle the transfer rates of the device, data loss can occur leading to device disconnection events. Disabling hyper threading could increase the single threaded performance of the PC alleviating this issue. You can disable hyperthreading in the B IOS of some PCs. If this has no effect, Signal Hound recommends re -enabling hyperthreading as it can impact the performance other other heavily threaded applications.