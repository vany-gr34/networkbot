
Contents 1 Why use LEDE? 3 2 Download LEDE 5 3 LEDE wants you! 7 4 Contents 9 4.1 LEDE Project Information.
The LEDE Project (“Linux Embedded Development Environment”) is a Linux operating system based on OpenWrt. It is a complete replacement for the vendor-supplied ﬁrmware of a wide range of wireless routers and non-network devices. See the Table of Hardware for supported devices. For more information about LEDE Project organization, 
It's a project that was created as a fork of OpenWrt, which is a popular open-source Linux operating system for embedded devices like routers, network switches, access points, etc.
 Why use LEDE? People install LEDE because they believe it works better than the stock ﬁrmware from their vendor. They ﬁnd it is more stable, offers more features, is more secure and has better support. 
- Extensibility: LEDE provides many capabilities found only in high-end devices. Its 3000+ application packages are standardized, so you can easily replicate the same setup on any supported device, including two (or even ﬁve) year old routers. More about extensibility... 
- Security: LEDE’s standard installation is secure by default, with Wi-Fi disabled, no poor passwords or backdoors. LEDE’s software components are kept up-to-date, so vulnerabilities get closed shortly after they are discovered. More about security... 
- Performance and Stability: LEDE ﬁrmware is made of standardized modules used in all supported devices. This means each module will likely receive more testing and bug ﬁxing than stock ﬁrmware which can be tweaked for each product line and never touched again. More about performance and stability... 
- Strong Community Support: LEDE team members are regular participants on the LEDE Forum, LEDE Developer and LEDE Admin mailing lists, and LEDE’s IRC channels. You can interact directly with developers, volunteers managing the software modules and with other long-time LEDE users, drastically increasing the chances you will solve the issue at hand. More about community... 
- Research: Many teams use LEDE as a platform for their research into network performance. This means that the improvements of their successful experiments will be available in LEDE ﬁrst, well before it gets incorporated into mainline, vendor ﬁrmware. More about research... 
- Open Source/No additional cost: LEDE is provided without any monetary cost. It has been entirely created by a team of volunteers: developers and maintainers, individuals and companies. If you enjoy using LEDE, consider contributing some effort to help us improve it for others! All of the above is possible because LEDE is part of the Open Source community, and powered by Linux kernel. Get the source code... 
LEDE wants you! Like any open source project, LEDE thrives on the efforts of its users and developers. 
- If you want to develop the software, please refer to our Developer Guide to learn how to get the source code, build it, and contribute your changes back to the project. 
- If you’re not a developer, you can still help. The documentation can always be improved (even if it’s to verify that the instructions match your experience), or you can help other community members with questions. Don’t hesitate to Register yourself in the wiki, or join our mailing list and IRC channels to get in touch. 
Contents Lede documentation is organised in a set of guides, a table of supported hardware, and package reference. 4.1 LEDE Project Information In the following sections you will be able to ﬁnd all the resources contained. In the following list you can ﬁnd information about the project. 4.1.1 Reasons to Use LEDE People install LEDE because they ﬁnd it to be superior to the stock ﬁrmware of their router or embedded device. This page showcases many aspects of LEDE. Performance & Stability LEDE is designed by network professionals and others who care about the performance of their network. LEDE incorporates many algorithms from recent research that perform far better than vendor-supplied ﬁrmware. 
- LEDE is stable, and operates reliably for long periods of time. 
- LEDE reduces latency/lag and increased network throughput via bufferbloat control algorithms. 
- Wi-Fi improvements support higher data rates and airtime fairness between stations. 
- Older devices are still supported by LEDE improvements (as long as RAM/Flash of your device can accommodate new releases) long after the manufacturer stops making updates. Security LEDE is an open source software. Many developers from all over the world review the code before it’s released. 9
 
- No hidden backdoors left by hardware vendors. 
- LEDE is resistant to common vulnerabilities thanks to its Linux OS which is unaffected by many common attacks. 
- LEDE is actively updated so any vulnerabilities are closed shortly after they are discovered. 
- Default LEDE conﬁguration is very conservative allowing full internet connectivity without exposing your router or connected devices to attacks. 
- Many of the older devices are supported by LEDE and can enjoy security LEDE brings, long after vendors stop releasing ﬁrmware updates. 
- LEDE prolongs the life of your router. While many vendors only provide updates for your router/device until the newer model is released, LEDE supports all compatible models for as long as their RAM/Flash can accommodate new releases. Extensibility While vendor ﬁrmware for a router ships with a ﬁxed set of capabilities, LEDE provides more than 3000 packages ready to be installed. Some of the more popular packages allow you to: 
- Run ad blocking on your router so you can enjoy clean uncluttered web experience from any connected device. 
- Reduce latency/lag (bufferbloat) even during heavy trafﬁc with Smart Queue Management 
- Secure access to your home network when away via OpenVPN Server. 
- Secure your internet access and prevent your ISP from snooping on your internet activity (requires third party service) OpenVPN Client. 
- Prevent your ISP from snooping on your DNS requests via DNSCrypt Proxy. 
- Force connected devices with hard-coded DNS servers to use your router’s DNS with DNS Request Hijacking. 
- Create a Guest Network for Guest WiFi allowing access to internet, but not your local devices. 
- Control access using the time limits and parental controls. 
- Add a webcam for live surveillance or timelapse video creation of landscapes or 3D printers. 
- Connect to your weather station, record weather statistics and make them accessible via a webserver, garnished with a live webcam image. 
- Interact with 1-wire devices (sensors, actors, ...). 
- Make your router a central for home automation. 
- Access a wider range of Dynamic DNS (ddns) providers than vendor ﬁrmware via DDNS scripts. Community Support The vibrant community of developers, volunteers, and other long-time LEDE users are always available to help solve an issue. 
- LEDE forum - member-to-member conversations about LEDE 
- LEDE Developer and LEDE Admin mailing lists 
- #lede-dev and #lede-adm on Freenode IRC 
- Refer to the contact page for a complete list to contact the project. 10 . Contents
 Research Platform Many teams who are doing cutting-edge research into networking topics use LEDE as a stable platform for their work. As their work moves from the experimental realm into practical, production-quality code, it is available in LEDE builds ﬁrst. Some teams using LEDE include: 
- Continuing development of the fq_codel and cake algorithms that decrease bufferbloat. 
- The Make Wi-Fi Fast team has been working to decrease queueing and latency in the wi-ﬁ stack, and is testing out their airtime fairness code using LEDE. 
- Homenet provides implementation of zeroconf IPv6 (and IPv4) routing, preﬁx assignment and service discovery for a home network consisting of multiple routers connected to multiple service providers. There’s a hnet-full package for LEDE. Conﬁguration Because LEDE is a true Linux-based system, you have full control over all functions of your router/device. 
- LEDE provides both command-line interface (via SSH) and a web-based user interface for conﬁguration. 
- Conﬁguration information is stored in plain-text ﬁles to ease the editing and/or copying. 
- LEDE Image Builder allows you to create your own ﬁrmware images for your device with any customizations (pre-deﬁned password, WiFi, etc). 
- The Web GUI allows you to select themes that suit your needs/tastes In addition, Localization of Web UI is available via packages in over 20 languages. 
- Conﬁgure the external LEDs and buttons/switches to suit your needs. Zero Cost LEDE is provided for free through its GPL license, and thanks to the efforts of many volunteer contributors (both individuals and companies). There are no subscription or licensing fees. 4.1.2 About the LEDE project A reboot of the OpenWrt community The LEDE project is founded as a spin-off of the OpenWrt project and shares many of the same goals. We are building an embedded Linux distribution that makes it easy for developers, system administrators or other Linux enthusiasts to build and customize software for embedded devices, especially wireless routers. The name LEDE stands for Linux Embedded Development Environment. Members of the project already include a signiﬁcant share of the most active members of the OpenWrt community. We intend to bring new life to Embedded Linux development by creating a community with a strong focus on transparency, collaboration and decentralisation. LEDE’s stated goals are: 
- Build a great embedded Linux distribution with focus on stability and functionality. 
- Make regular, predictable release cycles coupled with community provided device testing feedback. 
- Establish transparent decision processes with broad community participation and public meetings. We decided to create this new project because of long standing issues that we were unable to ﬁx from within the OpenWrt project/community: 4.1. LEDE Project Information 11
 
- Number of active core developers at an all time low, no process for getting more new people involved. 
- Unreliable infrastructure, ﬁxes prevented by internal disagreements and single points of failure. 
- Lack of communication, transparency and coordination in the OpenWrt project, both inside the core team and between the core team and the rest of the community. 
- Not enough people with commit access to handle the incoming ﬂow of patches, too little attention to testing and regular builds. 
- Lack of focus on stability and documentation. To address these issues we set up the LEDE project in a different way compared to OpenWrt: 
- All our communication channels are public, some read-only to non-members to maintain a good signal-to-noise ratio. 
- Our decision making process is more open, with an approximate 50/50 mix of developers and power users with voting rights. 
- Our infrastructure is simpliﬁed a lot, to ensure that it creates less maintenance work for us. 
- We have made our merge policy more liberal, based on our experience with the OpenWrt package github feed. 
- We have a strong focus on automated testing combined with a simpliﬁed release process. Name The name LEDE is an abbreviation for Linux Embedded Development Environment, a reference to its ﬂexibility and embedded buildroot origins, making it a solid choice for embedded Linux applications far beyond the wireless router and network appliance realm. Project Meetings We attempt to have regular IRC meetings to discuss and decide project matters. Next Meeting The next meeting date is yet to be decided. For the agenda of the upcoming meeting refer to the agenda pad. Meeting Logs All meeting logs can be viewed here. People Here you can ﬁnd an alphabetically ordered list of the current people involved in the development of the LEDE Project: 12 . Contents
 Developers Nickname Alexander Couzens lynxis Álvaro Fernández Rojas noltari Daniel Golle dangole Felix Fietkau nbd Florian Fainelli [ﬂorian] Hans Dedecker dedeckeh Hauke Mehrtens hauke Imre Kaloz kaloz Jo-Philipp Wich jow John Crispin blogic Jonas Gorski jogo Luka Perkov luka Mathias Kresin mkresin Matthias Schiffer neoraider Mirko V ogt mirko Piotr Dymacz pepe2k Rafał Miłecki rmilecki Steven Barth cyrus Stijn Tintel stintel Ted Hess thess Yousong Zhou yousong Zoltan Herpai wigyori And in charge of the documentation: Wiki Documentation Nickname Thomas Endt tmomas Rich Brown richb-hanover Alberto Bursi bobafetthotmail 4.1.3 Communication within the LEDE Project One of LEDE’s goals is that all project-related communication should be done on public channels that are archived and easily browsable. However, speciﬁc problems and tasks may be resolved using direct means of communication. Please look through these choices to ﬁnd an appropriate means to reach us. Forum The LEDE Forum provides a place for direct member-to-member conversations about Installing and running LEDE; Requesting help with development questions; Discussing the documentation; and Publicizing community builds, new packages, and projects that use LEDE. Forum members can follow the discussion via the web, or optionally through email. Mailing Lists The project offers the following mailing lists: 
- lede-dev@lists.infradead.org - Use this list for submitting patches and general development related work. 
- lede-adm@lists.infradead.org - Use this list for project organisational purposes. Anyone can subscribe and read this list, only committers may write to this list. 4.1. LEDE Project Information 13
 In addition there are two read-only announcement lists: 
- lede-bugs@lists.infradead.org - This list receives bug tracking notiﬁcations from Flyspray. 
- lede-commits@lists.infradead.org - This list tracks the commits to our source.git andweb.git repositories. IRC Channels The project provides 2 IRC channels on freenode: 
- #lede-dev - a public channel for everyone to join and participate. 
- #lede-adm - a moderated channel that anyone can join but only people with +v ﬂag can write on. Bug Tracker Please submit bug reports at https://bugs.lede-project.org/. Server Status Changes Announcements on Twitter We will post notices of server outages, maintenance, or other disruption on the lede_project account on Twitter. Corporate Contact Please direct general inquiries to lede-contact@lede-project.org to open a conﬁdential discussion with the project developers. This contact address is primarily intended to ﬁnd a suitable mode of cooperation and to inquire about project matters without having to disclose your corporate identity upfront. There will be no special treatment beyond this ﬁrst contact. Please see the [[:rules|LEDE Project Rules]] for further information. Actual development should happen in public and corporations are strongly encouraged to send their contributions through the public mailing lists or in the form of Github pull requests. 4.2 LEDE Documentation LEDE is a highly extensible GNU/Linux distribution for embedded devices (typically wireless routers). LEDE is based on the OpenWrt project. Unlike many other distributions for routers, LEDE is built from the ground up to be a full-featured, easily modiﬁable operating system for embedded devices. In practice, this means that you can have all the features you need with none of the bloat, powered by a modern Linux kernel. 4.2.1 Quick Start Guide Start here if you are new to LEDE. Find out how to upgrade the ﬁrmware your home router to use LEDE and make your network at home much better. So you want to install LEDE on one of your devices. The following preparation is recommended, before ﬂashing LEDE ﬁrmware: 
- Don’t rush the installation, take your time. If something seems weird during installation, ﬁnd answers ﬁrst before continuing. 
- Have your device’s precise model name at hand (so you are able to select the correct LEDE ﬁrmware) 14 . Contents
 
- Have your devices’s documentation at hand, on how to ﬂash new ﬁrmware 
- When installing and conﬁguring LEDE on your Internet router, your Internet-access will obviously be ofﬂine for a few minutes. Please ensure that you have all required information ofﬂine or have backup Internet access at hand in this time. If you have any questions 
- browse this (LEDE) site, especially the User Guide. 
- feel free to ask in the LEDE Forum. 
- you can also consult the OpenWRT wiki, as LEDE is based on OpenWrt. Both projects shares most operational and installation aspects and some content has not yet been migrated. ...and now let’s start by installing LEDE on your device. Installation There are several installation methods documented in this quick guide depending on the following: 
- If your device still has the vendor ﬁrmware, follow the Factory installation procedure. 
- If your device already has an older LEDE or OpenWrt ﬁrmware on it, follow the Sysupgrade procedure. –If your current LEDE installation does not have the web admin GUI installed or if you prefer to upgrade from the command line (upgrade from command line provides more ﬁne-grained control), refer to Upgrading LEDE from the Command Line. 
- If you have any questions about this distinction, ask for help on the Installing and Using LEDE forum section before beginning. Device selection Devices with >=8 MBytes Flash memory and >=64 MBytes RAM allow a full-featured LEDE installation with GUI. Devices with 4 MByte or less Flash memory can install LEDE as well, but with a limited feature set. They cannot use optional packages and in some cases may also not have a web GUI, due to limited ﬂash space and may therefore have to stick to command line administration only. The creation of individual custom packages may help to avoid some of these limitations on such ‘small’ devices, but such a custom-package-creation is not part of this howto. If you want to purchase a new router for LEDE, stick to devices with >=8 MBytes Flash memory and >=64 MBytes RAM. Locate and download the LEDE ﬁrmware On the Table of Hardware: Firmware downloads page, locate your speciﬁc device. The table of hardware only references stable release versions of LEDE. If you are a newbee, only use these stable release version for ﬁrst-time device installations; do not initially use a (clearly marked) develop/snapshot version downloaded from other subfolders. This ensures that you get the easiest possible ﬁrst-time LEDE installation experience. When you have located your device in this list, click on the “View/edit data” link of the device record. This will open a new page with several details for your speciﬁc device. We recommend to bookmark that page, as it has lots of helpful information about your router. 4.2. LEDE Documentation 15
 Factory install On this device-speciﬁc Techdata page, at the bottom locate the line called “Firmware LEDE Install URL” that links to a downloadable ﬁle called ”...factory.bin” ﬁle. Sysupgrade On this device-speciﬁc Techdata page, at the bottom locate the line called “Firmware LEDE Upgrade URL” that links to a downloadable ﬁle called ”...sysupgrade.bin” ﬁle. Download Troubleshooting The LEDE download directory structure matches the OpenWrt download directories. If the Standard Flashing Instructions don’t provide the information you’re looking for, ask on the Installation Category of the forum or search the OpenWrt site for enough information about your device to ﬁnd the proper LEDE ﬁrmware image. Find the Device Page for your device on the OpenWrt Table of Hardware at https://wiki.openwrt.org/toh/start Find the name and URL of the proper OpenWrt ﬁrmware image (factory or sysupgrade). Then go to downloads.lede-project.org and ﬁnd the LEDE image from the corresponding directory. Follow the ﬂashing instructions on the OpenWrt Device Page, if needed. I still cannot ﬁnd the speciﬁed ﬁle Some devices lack an easy installable image and require a special (and usually a bit more complex) installation procedure that is device-speciﬁc. This tutorial won’t apply for such devices. If you have such a device, locate the corresponding device page in the older OpenWrt wiki and follow the custom installation description (Eventually older OpenWrt info will be migrated to the LEDE tech data pages). If you can’t ﬁnd your device in the Table of Hardware, or if there is not the ﬁle you are looking for, you can consult the “Installing and Using LEDE” Forum for help. I am in a folder with my device name in multiple ﬁles If you have accidentally browsed the generic LEDE download folders to locate your device, you might see some more download ﬁles matching your device. Ignore those other ﬁles for your device: you only want the speciﬁed ﬁle. Verify the downloaded ﬁrmware ﬁle This step is to verify a downloaded ﬁrmware binary against a reference checksum to avoid download errors. This ensures that you have a 100% correct download and that you will not brick your device by applying a faulty download. Warning: Only continue with ﬂashing if the ﬁrmware checksum of your download matches the checksum stated on the download site! 16 . Contents
 Get the reference checksum Obtaining the reference checksum from the download page is currently a little inconvenient, as the reference checksums of the ﬁrmware binaries are currently not listed on the LEDE device tech data pages. To get the reference checksum, recall the URL path of ﬁrmware binary you just downloaded, e.g. if your ﬁrmware download-URL was https://downloads.lede-project.org/releases/version/targets/chipset/modell/ lede-something-something-something-something-something.bin then open the web page https://downloads. lede-project.org/releases/version/targets/chipset/modell/ There you will ﬁnd a list of ﬁrmware images, one of it being the ﬁle you just downloaded. Now note the additional checksum string on the right side of the download link (in the table column “sha256sum”). We will now calculate a checksum of the downloaded ﬁle and compare it with that string. If that check fails, the ﬁrmware ﬁle was not properly downloaded and if you proceed ﬂashing such a ﬁle, you will probably brick the device permanently or require annoying procedures to recover. Warning: On checksum mismatches, download the ﬁrmware ﬁle again and compare it again. If the checksum is still wrong in repeated attempts, ask the LEDE forums for help. Calculate the checksum of the downloaded ﬁle Calculating checksum on Windows Newer Windows has a built-in tool to calculate sha256sums called ‘certutil’, but it has no graphical user interface so we will have to use the command line to interact with it. Older Windows version need to download a sha256 tool, for example MD5 & SHA Checksum Utility (the free version). To use the built-in certutil, click the Windows icon, type “cmd” and hit enter. Execute (assuming you downloaded the ﬁle to your Downloads folder): certutil -hashfile "%USERPROFILE%/Downloads/LEDE-file-name-here" sha256 This will print a checksum like this (ﬁle name followed by string with letters and numbers): SHA256-Hash of file C:\Users\USERNAME\Downloads\lede-17.01.1-...-factory.bin: 79 f9 4e fa d3 2c 14 8f f1 95 3f 09 6d 98 c7 41 c0 ff 8f 7e b4 68 8c 9d 5b f9 fb 01 ˓→c0 90 fb ab Remove spaces from this checksum output (e.g. using replace function in notepad): 79f94efad32c148ff1953f096d98c741c0ff8f7eb4688c9d5bf9fb01c090fbab Check that the checksum string without blanks matches the one you can ﬁnd in the sha256sums ﬁeld on the download page. Calculating checksum on Mac Mac has an integrated tool to check sha256sums, but it has no graphical user interface so we will have to use the Terminal to interact with it. Click the Finder icon in the Dock. 4.2. LEDE Documentation 17
 Click Applications in the Favorites list. Find the Utilities folder and click to open it. Locate Terminal and double-click the icon to open the program. Open a terminal window, and execute (assuming you downloaded the ﬁle on the desktop): shasum -a 256 ./Desktop/file-name-here it will print something like this (string with letters and numbers followed by ﬁle name): bba93584fc44045629888e6b147851917cd0c83fcc91a7e6dbe90bdce76 -17.01.0-...-sysupgrade. ˓→bin Check that the checksum string matches the one you can ﬁnd in the sha256sums ﬁeld on the download page. Calculating checksum on Linux Linux has an integrated tool that is accessible from command line, similar to Mac. Some ﬁle managers (dolphin and other more powerful ones used in KDE user interface) offer this functionality in the ﬁle property window (right-click on the ﬁle, select Properties, click on “Checksums” tab, that tab appears only for binary ﬁles, like ﬁrmware images). It will offer buttons to calculate the SHA256sum and a ﬁeld where you can paste the SHA256 string from sha256sums ﬁle to verify that it is correct. If your ﬁle manager does not offer any of this, you can always use the terminal window and type in the following command (again assuming you downloaded the ﬁle on the desktop) Command line veriﬁcation: On the terminal window, execute: sha256sum ./Desktop/file-name-here This will print something like this: 1a7c8bba93584fc44045629888e6b147851917cd0c83fcc91a7e6dbe90bdce76 lede-17.01.0-...- ˓→sysupgrade.bin Check that the checksum string matches as the one you can ﬁnd in the sha256sums ﬁeld on the download page. Troubleshooting Checksum is not the same If the checksum process has reported a checksum mismatch, do NOT start ﬂashing, as the download could be corrupt. A corrupt ﬁrmware ﬁle can brick your device! Instead retry with another download attempt and retry the checksum step. Checksum is still not the same If the checksum step fails repeatedly, you can consult the “Installing and Using LEDE” Forum for help. Be sure to include the exact brand, model, and version of your device. 18 . Contents
 Flash the ﬁrmware Factory install Connect to the device via Ethernet cable (Only fallback to wireless, if the device has no Ethernet connection options) Ensure that the LEDE ﬁrmware ﬁle that you are about to ﬂash, matches your router model and is called ”....factory.bin”, as you will use it to modify a vendor’s factory ﬁrmware towards LEDE. Log into the device’s admin web interface and locate the device-speciﬁc ﬁrmware installation function. Follow the device-speciﬁc instructions of your manufacturer’s user guide for installing ﬁrmware and use this to install the ”...factory.bin” ﬁrmware ﬁle of LEDE. Wait while the device writes the ﬁrmware image to its ﬂash memory. This can take several minutes (the Device Page may state an expected time for this process). At the end, the device will reboot automatically. The new ﬁrmware has been installed. Continue with the next section to check the result. Sysupgrade If you want to preserve your existing LEDE conﬁguration, backup the conﬁguration before ﬂashing, by using the web admin GUI menu: (LEDE default IP: http://192.168.1.1) -> System > Backup/ﬂash ﬁrmware ->Backup/Restore section >Generate archive. If you do not choose to backup, the existing LEDE conﬁguration will be lost and you have to start with a default LEDE conﬁguration after the upgrade. If you have NAS storage attached to your LEDE device, decide by yourself, whether you require a backup of ﬁles on that NAS. The backup includes conﬁg ﬁles of manually installed packages but not the packages themselves. After ﬂashing the ﬁrmware you will need to install those packages again. Verify ﬁrmware ﬁle and ﬂash the ﬁrmware Connect to the device via Ethernet cable (Use wireless only, if the device has no Ethernet connection options) Log into the LEDE’s web admin GUI and in the System -> Backup/Flash Firmware menu, go to the “Flash new ﬁrmware image” section. Uncheck /clear the “Keep settings” checkbox**!** (more info regarding the “ Keep settings checkbox” and it’s rare use cases). Ensure that the LEDE ﬁrmware ﬁle you are about to ﬂash matches your router model and is called ”....sysupgrade.bin”, as you will upgrade an existing LEDE/OpenWrt system towards a newer LEDE ﬁrmware version. In the “Flash new ﬁrmware image” section, click “Choose ﬁle” to select the image ﬁle, then click “Flash image...”. This displays a “Flash Firmware - Verify” page, containing a SHA256 checksum of the image ﬁle just uploaded to the router. Check that the ﬁrmware-checksum displayed on the web GUI matches the SHA256 checksum from the LEDE downloaded page. If it does not match, do NOT continue, as it is a corrupt ﬁle and will likely brick your device. Note: If you are upgrading from OpenWRT 15.05, the 32 character displayed is an MD5 checksum, not SHA256. Please verify this MD5 checksum on your operating system before proceeding. 4.2. LEDE Documentation 19
 Warning: Careful, this step is as important as the veriﬁcation of the previous step. Please make sure that the ﬁle checksum still matches. If the checksum matches, click “Proceed”. This starts the “System - Flashing ...” along with a spinning wheel and “Waiting for changes to be applied...” It can take several minutes, while the router uploads the ﬁrmware image and write it into its ﬂash ROM and ﬁnally reboots. The new ﬁrmware has been installed. Continue with the next section to check the result. Keep settings checkbox The “Keep settings” checkbox is a more advanced feature. If you do not precisely understand the button’s use cases, uncheck “Keep Settings” every time you ﬂash a new LEDE sysupgrade to your device, to notpreserve settings. 
- Only check the “Keep settings” checkbox on minor LEDE->LEDE bug ﬁx upgrades that are known to not change the conﬁg structure 
- Only use it for the same ﬁrmware channel (release->release, snapshot->snapshot) 
- Checking it will preserve several speciﬁc conﬁg ﬁles on the upgrade, but not the whole overlay partition. 
- If you ﬂash your device regularly, preferably consider unchecking “Keep Settings” every time you ﬂash the router and instead create a custom installation script for your customization. Example: conﬁg-openwrt.sh script. 
- “Keep settings” can also be used to preserve own conﬁgurations ﬁles. To do, go to System > Backup/Flash Firmware and open the Conﬁguration tab, add your conﬁg ﬁlesthere and click “Submit”. This will allow you to add your custom conﬁguration ﬁles to the ‘’/etc/sysupgrade.conf” ﬁle that is read by sysupgrade when it is backing up ﬁles. Click “Submit” when done editing.\ To view all ﬁles that would be kept when “keep settings” is checked, click the “ Open list... ” button. Next steps From here, we will gain access to the new LEDE ﬁrmware, through the different methods, and move into making a basic setup. Installing LEDE Development Snapshots For experienced users only! The steps below install LEDE development snapshot ﬁrmware on your device. What is a development snapshot ﬁrmware? Development snapshots are also known as simply “snapshots” or the outdated term “trunk builds”. Snapshots are versions of LEDE that are “in development”. They are rebuilt frequently, often multiple times a day. 20 . Contents
 I am a standard consumer, do I want a development snapshot ﬁrmware? No! Although they are the latest version, there is no guarantee that any particular snapshot build will be bug-free, or even work at all.\ Snapshots are not likely to be stable enough to be used on your home router, where you or members of your family rely on the network.\ As a standard consumer stick to the ofﬁcial release versions of LEDE. Snapshots do not have LuCi web admin GUI installed by default On snapshots, LuCi has to be installed manually (if needed). Manual LuCi installation by package may require more free ﬂash storage than a 4MB-ﬂash-device can handle, see 4/32 device warning To manually install LuCi: LuCI installation TL;DR: opkg update; opkg install luci; /etc/init.d/uhttpd start; /etc/init.d/uhttpd enable This should get a working GUI that repsonpds to http://192.168.1.1 requests by a browser, mind you I did not actually test that... Installing a LEDE Snapshot To install (or “ﬂash”) a LEDE snapshot ﬁrmware image, just follow the standard ﬂashing instructions: Factory install and Sysupgrade, with the only difference to use it for a ﬁrmware ﬁle from the snapshot download section. Setup Once you have a brand new installed LEDE device, the ﬁrst step is to gain access to it. Depending on the image you used, it may or not have Web Interface. 
- If you used a released image, they come with LuCi by default (the web interface). 
- If you used a development image, they don’t come with LuCi, so please proceed to gaining access through SSH. After gaining access, we will setup the basics for having internet access and WiFi. Accessing the LEDE web admin GUI LEDE has a web admin GUI called “LuCi”. 
- If your LEDE device has been conﬁgured as a router or gateway with default settings, LuCi is listening on your local IP subnet’s default gateway address http://192.168.1.1. 
- If your LEDE device has been conﬁgured as WiFi access point, network client or switch, LuCi’s address depends on the IP address you have manually conﬁgured for your LEDE device. You can also try, to use a local network scanner or your regular router’s status page to ﬁnd out the device IP address. You need to use the “root” password to successfully access LuCi, ‘root’ is the default admin account of your LEDE device. On a freshly installed LEDE device, there is no password set yet for the ‘root’ account, you can just enter right away. Go to the System->Administration page and deﬁne a new password in both ﬁelds, then click Save and Apply (at the bottom of the page). If you are unable to access your LEDE device, due to messed up IP address/root password conﬁguration, refer to the troubleshooting section of the User Guide, to reset the LEDE device’s settings. 4.2. LEDE Documentation 21
 This has veriﬁed that you can successfully use the LAN ports of your LEDE device. You now have a working LEDE device in its initial default conﬁguration. Troubleshooting For this check only use an Ethernet cable, as WiFi is by default only enabled for devices that do not have Ethernet ports If you have ﬂashed a development/snapshot ﬁrmware of LEDE, you ﬁrst need to manually enable the admin web GUI: development installation guide. Or verify the result on snapshot builds by SSH-connecting to your LEDE device IP 192.168.1.1 You can consult the troubleshooting section of the User Guide, if you think that resetting LEDE’s settings might help. You can consult the Installing and Using LEDE forum section, if something went wrong. Please provide speciﬁc details of your device and what you did so far and what you have attempted to ﬁx it. Do not worry, if the 5 GHz WiFi does not seem to start immediately after having enabled it. It might be busy for 1-10 min scanning for weather radar, see basic WiFi setup for more background info. Note that you can always run ‘’logread” on the SSH command line, to gain more insight into what the device is currently doing or to diagnose any kind of problems. If needed, you can also take a look at Troubleshooting Internet Connectivity. If you have ﬂashed a development/snapshot ﬁrmware of LEDE, you ﬁrst need to manually enable the admin web GUI: development installation guide. Or verify the result by SSH-connecting to your LEDE device IP 192.168.1.1 The router may have succeeded, but gotten a different IP address than you expected. Either scan your local network, check your regular router’s status page (to ﬁnd out about the IP address it has assigned to your LEDE device) or use failsafe mode, to manually reset LEDE’s settings (which includes the network settings) If you have checkmarked the “Keep settings” checkbox in the previous section and the system fails to boot after ﬂashing, you need to consult the failsafe mode, to manually reset all settings. SSH Access for Newcomers A LEDE device 
- always has SSH command line access (on port 22) 
- may also have a web admin GUI (on http port 80, and if enabled also on https port 443) To “ssh into your router”, you enter the command ‘’ssh root@192.168.1.1‘’ in a terminal emulator (for a router whose address is 192.168.1.1). The ﬁrst time you ssh into your router, you will probably see a warning about the //RSA key ﬁngerprint//. If you are certain this is the address of your LEDE router, simply type ‘’yes” and press Return. Then enter the password you have given to your router, or press Return if this is the initial setup. Here is an example session:
 $ ssh root@192.168.1.1 <== ˓→You type this
  The authenticity of host '192.168.1.1 (192.168.1.1)' can't be established. 
  RSA key fingerprint is SHA256:4VbDA/MOc7inPiyllF5f0r3Q6iEx89ddKdhLGBovsiY. 
  Are you sure you want to continue connecting (yes/no)? yes <== ˓→and this
   Warning: Permanently added '192.168.1.1' (RSA) to the list of known hosts.
    root@192.168.1.1's password: <== ˓
    →and the password here 
BusyBox v1.25.1 () built-in shell (ash) 22 . Contents

- Open the Cmder folder, and double-click the Cmder icon. You’ll see a Cmder window open similar to the image below. 
- To ssh into the LEDE router at 192.168.1.1, type ‘’ssh root@192.168.1.1‘’ then press Return Using Smartty Smartty gives you command line access to LEDE and allows you to open/edit/download/upload ﬁles in LEDE, and is overall more modern and user-friendly than Putty (another tool detailed below): 4.2. LEDE Documentation 23
 
- Download Smartty from http://smartty.sysprogs.com/: choose “download” for the installer, or “portable version” if you want it as a standalone program that works without installation. 
- after installation or after unzipping the archive, doubleclick on SmarTTY executable ﬁle. 
- You will be greeted by a window with two choices, doubleclick on “setup a new SSH connection” (the other option is for serial connections, for usb-TTL dongles and somesuch you connect to the device’s debug serial pins on the board, we won’t use that now). 
- The window changes into the SSH setup, write the following info: - Host name: LEDE device IP address (default is 192.168.1.1 ) -User Name: root (this is the “administrator” and only user in default LEDE) - Password: leave this blank for your ﬁrst connection, then write the password you set up (either in Luci GUI or after your ﬁrst SSH access) 
- Click “Connect” button at the bottom, and you will now see a big terminal screen coming up 
- A default LEDE ﬁrmware lacks the server component to allow you to open/edit/view/upoad/download ﬁles in Smartty, so after you have connected to the internet write ‘’opkg update && opkg install openssh-sftp-server” to install it. If the next step fails, it might be necessary to reboot the LEDE device for this new service to start up properly. 
- Now you can click on File -> Open a Remote File to open a popup that shows the ﬁlesystem of the LEDE device, and you can navigate in it and open text ﬁles for example as normal (they will open in a SmarTTY text editor window) 
- If you want to upload or download ﬁles to/from a speciﬁc folder in the device, you can click on SCP menu and choose the most appropriate action from there. After the ﬁrst time you connected to a device, Smartty saved a proﬁle, so you can connect again to the same device (at that IP address with that password) by just doubleclicking its icon on the ﬁrst window you see when starting Smartty. You can right-click on this proﬁle icon to edit it again, if needed. Using putty Putty gives you command line access to LEDE: 
- Download Putty from http://www.putty.org: Simply get the 32bit ‘’putty.exe” download from the ‘’Alternative binary ﬁles” section. 
- Start ‘’putty.exe” on your Windows client -> Putty’s login window pops up. 
- go to the’‘Session” category of Putty’s login window, look for the ﬁeld ‘’Host Name (or IP address)” and simply enter the IP-address (e.g. 192.168.1.1 ) of your LEDE device, keep the default provided port 22. 
- Click the ‘’Open” button at the Bottom to open a connection. This will pop up a shell windows, asking to ‘’login as’‘. Login as root with the LEDE password you have deﬁned some time before. If you have not yet set a password yet on “root”, you will not be asked for the password. 
- Done, you are logged into the LEDE command line. Using WinSCP WinSCP allows you to browse the LEDE ﬁle system in Windows Exlorer like GUI-style: 
- You have to install the SFTP server on the LEDE side ﬁrst, as WinSCP needs that to connect successfully. On the putty command line (see previous section) execute: –‘’opkg update’‘ –‘’opkg install openssh-sftp-server’‘ 24 . Contents
 –It usually is not required at this point, but for the sake of simplicity of this howto, reboot your LEDE device now, to make sure the SFTP service really starts up 
- Download WinSCP from https://winscp.net/eng/download.php, get the non-beta ‘’Installation package” or ‘’portable executables” and install or unzip them on your Windows client 
- Start ‘’WinSCP.exe” on your Windows client, WinSCP’s login window will pop up 
- Click on ‘’New Site” on the left, then enter your LEDE device IP address (192.168.1.1) on the right side into ‘’Host name’‘, keep the default port “22’‘. In ‘’User name” enter root, in ‘’Password’‘, enter your rootpassword (or leave blank, if you have not set a password yet) 
- Click the ‘’Login” at the bottom of the Window. 
- Done. You now have an Exlorer-like view of your LEDE ﬁlesystem. Editing LEDE conﬁg ﬁles with WINSCP’s integrated GUI editor: \ To edit a LEDE conﬁg ﬁle with WinSCP’s GUI-based editor, just right-click the ﬁle in WinSCP and select ‘’Edit” from the context menu. Linux Terminal Emulators All Linux distributions provide a command-line ssh client as part of the default installation. 
- Open a terminal emulator and write ssh root@192.168.1.1 (“ssh” is the command, “root” is the LEDE user you are connecting to, and “192.168.1.1” is LEDE default IP) 
- there will be a message about accepting a new key from the LEDE device, write “yes” and press Enter key. –If for some reason you have reinstalled LEDE the device will have a different key and you get an error about key mismatch. The error will state what is the command line to copy-paste in your terminal to delete the old key and proceed. 
- if you want to close the session, write “exit” Linux also usually has SCP clients (to open/edit/download/upload ﬁles in LEDE), which may or may not be installed by default. You need to look up your distro’s documentation or search with your package management interface for “SCP” to ﬁnd where it is and its current installation status. Read its integrated manual (“man scp” for example is for the command line SCP client) or google some tutorials to learn how to use it. macOS Terminal Emulators On macOS (formerly Mac OSX) any terminal emulator will allow you to ssh. There several terminal emulators: 
- Terminal - The macOS built-in terminal program. Find it in /Applications/Utilities 
- iTerm2 https://iterm2.com/ a much-enhanced terminal program. Donation-ware - it’s worth it. To ssh into your LEDE router at 192.168.1.1, type ‘’ssh root@192.168.1.1‘’, then press Return. Connecting to the Internet For a ﬁrst quick Internet access test: If you have an existing router, connect the WAN port of your LEDE device to a LAN port of that router and conﬁrm internet connectivity of your LEDE device with the following steps: 
- In the LEDE admin web GUI, go to Network -> Diagnostics and Click on “ping” button 
- or, if using LEDE SSH command line, you can use the command ‘’ping lede-project.org’‘ 
- This should return “0% packet loss” if everything is allright with your Internet connection. 4.2. LEDE Documentation 25
 Use the following steps if you can connect to your LEDE router’s Web GUI, but cannot connect to the broader Internet (say, www.google.com). Verify that the WAN connection of your router (usually Ethernet) is connected to your cable/DSL modem, or other device that’s connected “to the internet”. Check to see if your LAN and WAN ports are in the same address range. To do this: 
- Go to Network -> Interfaces 
- Find the IPv4 address assigned to the LAN interface 
- Find the IPv4 address assigned to the WAN interface 
- If these two addresses are in the same range, e.g., if they start with the same three sets of numbers, then they are in the same address range. You need to change the address of the LAN interface (see next step). 
- If the address ranges do not conﬂict, then ask on the LEDE Forum for more help. Change the LAN interface address, if necessary. To do this: 
- From the Network -> Interfaces page, click the Edit button next to the LAN interface. 
- The “IPv4 Address” ﬁeld will show the LAN address found above. 
- Enter a new address, that differs from the WAN address. For example, the LAN address after a fresh LEDE installation will be “192.168.1.1’‘. A good alternate address would be “192.168.2.1’‘. 
- Change the ﬁeld to the new address, then click Save and Apply at the bottom of the page. 
- Write the new address on the sticker that you placed on the bottom of your router. (This will save you or your techie friend a ton of time next time you need to work on the router.) After changing the address, you will need to enter the new address in your web browser. You should get the LEDE login page again. If you can now access the internet (e.g., www.google.com), you’re all set. If you still cannot access the internet, then ask on the LEDE Forum for more help. Setup the WiFi Decide, whether you want to use LEDE as switch, router or gateway When using your LEDE device as a WiFi access point, remember to initially set your country code in the LEDE WiFi conﬁguration, to properly comply with your country’s WiFi legal regulation!, e.g. see here for a ﬁrst basic WiFi setup. Consult the User Guide for more advanced conﬁguration. Install custom software packages that you might be interested in. Or, if you had LEDE before, reinstall the custom packages that you had before the sysupgrade, by using ‘’opkg’‘. If any package installs a system service, you also need to enable the corresponding service according to your needs. If you have chosen to backup your previous LEDE conﬁg before ﬂashing, you can now restore it, using LuCi’s System > Backup/ﬂash ﬁrmware menu. Otherwise you need to start conﬁguring from scratch. Set your country code in the LEDE WiFi conﬁguration to comply with your country’s WiFi legal regulation, e.g. see in basic WiFi setup. 26 . Contents
 Optional Next Steps Once the snapshot is installed on your device Install LuCI, if required Consult the User Guide Install other packages with opkg install .... You should deﬁnitely install the SQM-QoS package to minimize lag/latency. Use opkg install luci-app-sqm, then read how to conﬁgure it in the SQM Howto. 
- Other useful packages are snmpd, netperf, and any of your favorites. If you have an unbranded / low-end / low-cost router that came shipped with OpenWrt / LEDE, you can ﬁnd out the architecture it is using by connecting to it over ssh and opening /proc/cpuinfo. A combination of the system type and machine is what you are looking for. If you will be ﬂashing LEDE snapshot ﬁrmware frequently, you can create a script that makes conﬁguration changes in a reliable and repeatable fashion. See, for example, the conﬁg-openwrt.sh script that updates most settings. Setup a Wi-Fi access point on your LEDE device Devices that have ethernet ports have Wi-Fi turned off by default. This is a basic description, how to enable a ﬁrst WiFi network and most important, how to properly conﬁgure your country code such that your WiFi network complies with the legal regulation of your country. On web admin GUI 
- Open the admin GUI on http://192.168.1.1 
- Login with your “root” password 
- Go to the menu Network →Wireless. This page list a separate WiFi conﬁguration section for each of your pysical radios, (many devices you will have a ﬁrst radio for 2.4 GHz and a second one for 5 GHz). 
- For each of your radios, you can create a WiFi network by clicking ‘’Add’‘: –On the ﬁrst WiFi network that you conﬁgure, go to the Device Conﬁguration and open the tab Advanced Settings: in the ‘’Country Code” ﬁeld, select the correct county code, where your LEDE device is installed. This is important to ensure your LEDE device meets legal regulations in your country. (all other conﬁgured radios will use the same device settings) –For each WiFi network, in the “Interface Conﬁguration” section, conﬁgure your WiFi settings, at least customizing the following settings: *In the tab General Setup, deﬁne a custom ‘’ESSID” (the name of your WiFi network) *In the tab Wireless Security, activate some ‘’Encryption” (e,g, “WPA2-PSK”) *In the tab Wireless Security, activate a ‘’Cipher” (e.g. “Force CCMP AES”) *In the tab Wireless Security, in ‘’Key’‘, deﬁne a personal secret phrase, which clients need to use, to successfully connect to your WiFi network. *If needed, conﬁgure further settings according to your needs. often the default settings like auto are sufﬁcient for general usage. 
- Click ‘’Save & Apply” when done. Troubleshooting: 4.2. LEDE Documentation 27
 
- If you have conﬁgured 5GHz WiFi and have just enabled it, but the 5 GHz WiFi does not seem to start up, consider the following: If your device supports WiFi channels > 100, your LEDE device ﬁrst must scan for weather radar on these channels, before you can actually use such channels for WiFi. This may take 1-10 minutes onetime after ﬁrst reboot depending on your WiFi situation and depending on the number of device-supported channels > 100. You may also experience 1 minute delay on each automatic channel change, as the same scan delay is required for regulation compliance. On SSH command line This is not a complete howto, to create a WiFi network on the command line.\ It just shows you the important step, to initially set your country code for proper WiFi on the command line, to meet legal regulations of your country: 
- Connect with SSH to your LEDE device. 
- Execute ‘’uci show wireless” to see all the wireless conﬁguration and how many Wi-Fi chips (called “radio” in the conﬁg) there are on the device 
- Find out your country in a list of ISO/IEC 3166 alpha2 country codes. There is a list on the wikipedia article about ISO 3166-1 alpha-2 
- Execute ‘’uci set wireless.radio0.country=’XX’ ‘’ to set the country code XX for radio0 device, and adjust this command to set the same country code for all wireless radios in the device. LEDE Starter FAQ Ok, so I’ve successfully ﬂashed LEDE on my device. what should I do next? Set an initial root password, setup WiFi, get familiar with the troubleshooting/rescue options in the user guide, then browse the user guide for further conﬁg you may be interested in. How do I access the web admin GUI on a default installation? Open http://192.168.1.1 or http://lede in your favorite web browser What is the default admin username in LEDE? “root” What is the initial password for root? There is no initial password set. Please set one manually, after your ﬁrst login, either by using ‘’passwd” on the command line or in LUCI Menu System/Administration Can I reset the ‘root’ password, in case I have forgotten it? Yes, check the troubleshooting section of the user guide. I seem to have messed up the LEDE device conﬁguration, my LEDE device is no longer accessible. What do I do? Check the troubleshooting section of the user guide, several recovery options are available. How can I enable SSL for the web admin gui? In an SSH-command line, run ‘’opkg update’‘, then install the package ‘’opkg install luci-ssl’‘, then restart the router. Then you can access https://192.168.1.1 or https://lede with your favorite web browser Is there a command line editor available in SSH? usevi. It’s most important key shortcuts are: 28 . Contents
 ——– ——————————————- ESC :q! exits without saving ESC :wq exit and save ESC i insert text at the current cursor position ESC x delete the character under the cursor ESC dd delete the whole current line ESC o open new line below cursor ESC O open new line above cursor ——– ——————————————- What other tools can I use for administration of LEDE from a windows client? Get Putty for SSH access to LEDE and get WinSCP as a ﬁle browser. For WinSCP to connect successful, you have to ﬁrst ‘’opkg update” then install the package ‘’opkg install openssh-sftp-server’‘. You can then use WinSCP to click through the LEDE ﬁle system and use its GUI editor for editing LEDE conﬁg ﬁles. I would like to customize LEDE, but am having difﬁculties ﬁnding the packages that I am interested in. Remember to ﬁrst run ‘’opkg update” once after each LEDE reboot, to refresh the list of available packages. LEDE will only temporary store the retrieved list in a temp RAM ﬁlesystem, losing the list of updates on every reboot. Why is there a “WAN” and a “WAN6” and a “LAN” interface in LEDE, but no “LAN6” ? Note that there is a “WAN” and “WAN6” interface. Each of the 2 WAN interfaces holds conﬁg data related to the upstream interface (WAN is for IPv4 and has “DHCP client”, while WAN6 is for IPv6 has “DHCPv6 client”). On the other hand “LAN” has both the conﬁg data for the downstream side for both IPv4 and IPv6 associated, so there is no need to have an extra LAN6 interface. Also note that both an interface and a zone called “LAN” exist. Also “WAN” is used both as a name for a zone and as a name for the IPv4 WAN interface. Both the “WAN” and “WAN6” interface belong to the “WAN” zone (so furthermore there is no “WAN6” zone) Why is there both a “Save & Apply” and a “Save” button in LuCi? You can do several different changes in different tabs, each time clicking “Save” without committing the changes. You can then use “Save & Apply” to commit all of those changes in one transaction. What is the difference of total available memory, free and buffered shown in LuCi status overview? Total = free + buffered. Buffered = memory that is temporarily in use to handle I/O operations Free = really free memory 4.2.2 User Guide Start here if you already have LEDE running on your router. LEDE has hundreds of optional packages that give you VPNs, VLANs, and other capabilities. 4.2.3 Developer Guide Start here if you want to create custom builds of LEDE or contribute to its development. There are a large number of tools that make the development easy. 4.2.4 Where can I learn more? The three guides above (Newcomer, User, and Developer Guides) have links to virtually all the information about LEDE contained in this documentation. However, you may ﬁnd more support in 4.2. LEDE Documentation 29


Endorsements The *Wrt community is made up of many great communities all tinkering on their own mission in improving something on this planet. The Following communities have kindly decided to endorse this project. Thanks ! qMp endorses the LEDE project “We wish huge success to the LEDE project” Weimarnetz Project Homepage “We. .. will consider it the new default OS environment for embedded devices running bmx6 and bmx7” “We endorse the LEDE project and we plan to start basing Libre-Mesh releases on Linux Embedded Development Environment” “We deeply appreciate the efforts of the LEDE project. .. ” 
OpenWrt was a project to replace stock firmware on routers and network devices with a Linux-based customizable firmware.

In 2016, some developers were unhappy with how OpenWrt was being managed.

They created a new project called LEDE to continue development more openly, with better organization and transparency.

LEDE and OpenWrt were separate for a while.

In 2018, LEDE and OpenWrt merged back together into one single project under the name OpenWrt.

So today, LEDE is basically part of OpenWrt's history.
 Here's **how you can download and install LEDE / OpenWrt on a router:
1. Find a Compatible Router
First, you need a router that **supports OpenWrt**.
Go here to check if your router is compatible:
- [OpenWrt Supported Devices Table](https://openwrt.org/toh/start)

You can search for your router model.  
If your router is **supported**, it will show firmware downloads and instructions.

If you don't have a compatible router yet, I can suggest some cheap models you can buy!
 2. Download the Firmware
- Go to [https://firmware-selector.openwrt.org/](https://firmware-selector.openwrt.org/)
- **Search your router model** (Example: TP-Link Archer C7, GL.iNet Mango, etc.)
- Select the right version (be careful: sometimes it's **v1**, **v2**, **v3**... match yours)
- Download the file (example: `openwrt-23.05.0-ramips-mt76x8-tplink_c20-v4-squashfs-factory.bin`)

 Download the **factory** image if you are installing OpenWrt for the first time.
 3. Flash the Router
WARNING: Flashing incorrectly can "brick" the router! Follow steps carefully.

- Connect your computer to the router with an **Ethernet cable** (recommended).
- Go to the router's **admin interface** (usually `192.168.0.1` or `192.168.1.1`).
- Login (default is often `admin` / `admin`).
- Find the "**Firmware Upgrade**" section.
- Upload the OpenWrt `.bin` file you downloaded.
- Start the upgrade — wait! (don't unplug anything).
- After it reboots, your router will run OpenWrt!

Now you can access OpenWrt's web interface at:
```
http://192.168.1.1
```
Default login:
- Username: `root`
- Password: *(blank)* (no password at first — it will ask you to set one)

---

### 📦 Summary
| Step | What to Do |
|:---|:---|
| 1 | Check if your router is compatible |
| 2 | Download the correct OpenWrt firmware |
| 3 | Flash the firmware via the router web interface |
| 4 | Set up OpenWrt after reboot |

---

 Bonus Tip:
After flashing OpenWrt, **you can install packages** like:
```bash
opkg update
opkg install luci
```
(`luci` = Web Interface if it’s not already installed)

---

 